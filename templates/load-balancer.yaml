Description: >
  Create Application Load Balancer resources for Blue/Green Deployment on ECS. For further reference, please review BluegreenRepo ==> https://github.com/awslabs/ecs-blue-green-deployment

Parameters:
  VpcId:
    Type: String

  VpcCIDR:
    Type: String

  Subnet1:
    Type: AWS::EC2::Subnet::Id
  Subnet2:
    Type: AWS::EC2::Subnet::Id

  Name:
    Type: String

  HostName:
    Type: String

Resources:

  # For centriqhome.com
  HomeRecordSet:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: Z2LLJ2XVUGXONO
      Comment: "Create friendly DNS name for stack ALB"
      RecordSets:
        - Name: !Sub "${HostName}.centriqhome.com"
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
            DNSName: !GetAtt LoadBalancer.DNSName

  # For centriq.me
  MeRecordSet:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: ZWBXC2YI5Q9HN
      Comment: "Create friendly DNS name for stack ALB"
      RecordSets:
        - Name: !Sub "${HostName}.centriq.me"
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
            DNSName: !GetAtt LoadBalancer.DNSName

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-alb
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "TCP"
          FromPort: 443
          ToPort: 443
        - CidrIp: "0.0.0.0/0"
        # Change above to !Ref VpcCIDR, if you want to restrict the beta version of the traffic to VPC CIDRs only
          IpProtocol: "TCP"
          FromPort: 8443
          ToPort: 8443
        - CidrIp: "0.0.0.0/0" # To allow HTTP -> HTTPS redirects
          IpProtocol: "TCP"
          FromPort: 80
          ToPort: 80
      VpcId: !Ref VpcId

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref Name
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
      SecurityGroups:
        - !Ref SecurityGroup

Outputs:
  ServiceUrl:
    Description: URL of the load balancer for the sample service.
    Value: !Sub https://${LoadBalancer.DNSName}

  SecurityGroup:
    Value: !Ref SecurityGroup

  LoadBalancerArn:
    Value: !Ref LoadBalancer
