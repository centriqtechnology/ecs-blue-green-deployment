Description: >
  Create Application Load Balancer resources for Blue/Green Deployment on ECS. For further reference, please review BluegreenRepo ==> https://github.com/awslabs/ecs-blue-green-deployment

Parameters:
  AppName:
    Type: String

  Env:
    Type: String

  VpcId:
    Type: String

  VpcCIDR:
    Type: String

  Subnet1:
    Type: AWS::EC2::Subnet::Id
  Subnet2:
    Type: AWS::EC2::Subnet::Id


Resources:
  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub ${AppName}-{Env}-alb
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "TCP"
          FromPort: 443
          ToPort: 443
        - CidrIp: "0.0.0.0/0"
        # Change above to !Ref VpcCIDR, if you want to restrict the beta version of the traffic to VPC CIDRs only
          IpProtocol: "TCP"
          FromPort: 8443
          ToPort: 8443
      VpcId: !Ref VpcId

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${AppName}-${Env}
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
      SecurityGroups:
        - !Ref SecurityGroup
        
  DNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: centriqhome.com.
      RecordSets:
      - Name: !Sub ${AppName}-${Env}.centriqhome.com.
        Type: A
        AliasTarget:
          HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
          DNSName: !GetAtt LoadBalancer.DNSName

Outputs:
  ServiceUrl:
    Description: URL of the service.
    Value: !Sub https://${AppName}-${Env}.centriqhome.com

  SecurityGroup:
    Value: !Ref SecurityGroup

  LoadBalancerArn:
    Value: !Ref LoadBalancer
